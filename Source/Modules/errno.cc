#include "time.hh"

#include <errno.h>
#include <stdlib.h>
#include <stdint.h>

#include <memory>
#include <string>
#include <unordered_map>

#include "../Compiler/Contexts.hh"
#include "../Environment/Value.hh"
#include "../Types/Dictionary.hh"

using namespace std;



extern shared_ptr<GlobalContext> global;

static wstring __doc__ = L"Standard error code symbols.";

#define INFIX_ERROR(e) {Value(ValueType::Int, static_cast<int64_t>(e)), \
    shared_ptr<Value>(new Value(ValueType::Unicode, L ## #e))}

unordered_map<Value, shared_ptr<Value>> errno_names({
  // common errors
  INFIX_ERROR(E2BIG),
  INFIX_ERROR(EACCES),
  INFIX_ERROR(EADDRINUSE),
  INFIX_ERROR(EADDRNOTAVAIL),
  INFIX_ERROR(EAFNOSUPPORT),
  INFIX_ERROR(EAGAIN),
  INFIX_ERROR(EALREADY),
  INFIX_ERROR(EBADF),
  INFIX_ERROR(EBADMSG),
  INFIX_ERROR(EBUSY),
  INFIX_ERROR(ECANCELED),
  INFIX_ERROR(ECHILD),
  INFIX_ERROR(ECONNABORTED),
  INFIX_ERROR(ECONNREFUSED),
  INFIX_ERROR(ECONNRESET),
  INFIX_ERROR(EDEADLK),
  INFIX_ERROR(EDESTADDRREQ),
  INFIX_ERROR(EDOM),
  INFIX_ERROR(EDQUOT),
  INFIX_ERROR(EEXIST),
  INFIX_ERROR(EFAULT),
  INFIX_ERROR(EFBIG),
  INFIX_ERROR(EHOSTDOWN),
  INFIX_ERROR(EHOSTUNREACH),
  INFIX_ERROR(EIDRM),
  INFIX_ERROR(EILSEQ),
  INFIX_ERROR(EINPROGRESS),
  INFIX_ERROR(EINTR),
  INFIX_ERROR(EINVAL),
  INFIX_ERROR(EIO),
  INFIX_ERROR(EISCONN),
  INFIX_ERROR(EISDIR),
  INFIX_ERROR(ELOOP),
  INFIX_ERROR(EMFILE),
  INFIX_ERROR(EMLINK),
  INFIX_ERROR(EMSGSIZE),
  INFIX_ERROR(EMULTIHOP),
  INFIX_ERROR(ENAMETOOLONG),
  INFIX_ERROR(ENETDOWN),
  INFIX_ERROR(ENETRESET),
  INFIX_ERROR(ENETUNREACH),
  INFIX_ERROR(ENFILE),
  INFIX_ERROR(ENOBUFS),
  INFIX_ERROR(ENODATA),
  INFIX_ERROR(ENODEV),
  INFIX_ERROR(ENOENT),
  INFIX_ERROR(ENOEXEC),
  INFIX_ERROR(ENOLCK),
  INFIX_ERROR(ENOLINK),
  INFIX_ERROR(ENOMEM),
  INFIX_ERROR(ENOMSG),
  INFIX_ERROR(ENOPROTOOPT),
  INFIX_ERROR(ENOSPC),
  INFIX_ERROR(ENOSR),
  INFIX_ERROR(ENOSTR),
  INFIX_ERROR(ENOSYS),
  INFIX_ERROR(ENOTBLK),
  INFIX_ERROR(ENOTCONN),
  INFIX_ERROR(ENOTDIR),
  INFIX_ERROR(ENOTEMPTY),
  INFIX_ERROR(ENOTRECOVERABLE),
  INFIX_ERROR(ENOTSOCK),
  INFIX_ERROR(ENOTSUP),
  INFIX_ERROR(ENOTTY),
  INFIX_ERROR(ENXIO),
  INFIX_ERROR(EOPNOTSUPP),
  INFIX_ERROR(EOVERFLOW),
  INFIX_ERROR(EOWNERDEAD),
  INFIX_ERROR(EPERM),
  INFIX_ERROR(EPFNOSUPPORT),
  INFIX_ERROR(EPIPE),
  INFIX_ERROR(EPROTO),
  INFIX_ERROR(EPROTONOSUPPORT),
  INFIX_ERROR(EPROTOTYPE),
  INFIX_ERROR(ERANGE),
  INFIX_ERROR(EREMOTE),
  INFIX_ERROR(EROFS),
  INFIX_ERROR(ESHUTDOWN),
  INFIX_ERROR(ESOCKTNOSUPPORT),
  INFIX_ERROR(ESPIPE),
  INFIX_ERROR(ESRCH),
  INFIX_ERROR(ESTALE),
  INFIX_ERROR(ETIME),
  INFIX_ERROR(ETIMEDOUT),
  INFIX_ERROR(ETOOMANYREFS),
  INFIX_ERROR(ETXTBSY),
  INFIX_ERROR(EUSERS),
  INFIX_ERROR(EWOULDBLOCK),
  INFIX_ERROR(EXDEV),

#ifdef LINUX
  INFIX_ERROR(EADV),
  INFIX_ERROR(EBADE),
  INFIX_ERROR(EBADFD),
  INFIX_ERROR(EBADR),
  INFIX_ERROR(EBADRQC),
  INFIX_ERROR(EBADSLT),
  INFIX_ERROR(EBFONT),
  INFIX_ERROR(ECHRNG),
  INFIX_ERROR(ECOMM),
  INFIX_ERROR(EDEADLOCK),
  INFIX_ERROR(EDOTDOT),
  INFIX_ERROR(EISNAM),
  INFIX_ERROR(EKEYEXPIRED),
  INFIX_ERROR(EKEYREJECTED),
  INFIX_ERROR(EKEYREVOKED),
  INFIX_ERROR(EL2HLT),
  INFIX_ERROR(EL2NSYNC),
  INFIX_ERROR(EL3HLT),
  INFIX_ERROR(EL3RST),
  INFIX_ERROR(ELIBACC),
  INFIX_ERROR(ELIBBAD),
  INFIX_ERROR(ELIBEXEC),
  INFIX_ERROR(ELIBMAX),
  INFIX_ERROR(ELIBSCN),
  INFIX_ERROR(ELNRNG),
  INFIX_ERROR(EMEDIUMTYPE),
  INFIX_ERROR(ENAVAIL),
  INFIX_ERROR(ENOANO),
  INFIX_ERROR(ENOCSI),
  INFIX_ERROR(ENOKEY),
  INFIX_ERROR(ENOMEDIUM),
  INFIX_ERROR(ENONET),
  INFIX_ERROR(ENOPKG),
  INFIX_ERROR(ENOTNAM),
  INFIX_ERROR(ENOTUNIQ),
  INFIX_ERROR(EREMCHG),
  INFIX_ERROR(EREMOTEIO),
  INFIX_ERROR(ERESTART),
  INFIX_ERROR(ERFKILL),
  INFIX_ERROR(ESRMNT),
  INFIX_ERROR(ESTRPIPE),
  INFIX_ERROR(EUCLEAN),
  INFIX_ERROR(EUNATCH),
  INFIX_ERROR(EXFULL),
#endif

#ifdef MACOSX
  INFIX_ERROR(EAUTH),
  INFIX_ERROR(EBADARCH),
  INFIX_ERROR(EBADEXEC),
  INFIX_ERROR(EBADMACHO),
  INFIX_ERROR(EBADRPC),
  INFIX_ERROR(EDEVERR),
  INFIX_ERROR(EFTYPE),
  INFIX_ERROR(ENEEDAUTH),
  INFIX_ERROR(ENOATTR),
  INFIX_ERROR(ENOPOLICY),
  INFIX_ERROR(EPROCLIM),
  INFIX_ERROR(EPROCUNAVAIL),
  INFIX_ERROR(EPROGMISMATCH),
  INFIX_ERROR(EPROGUNAVAIL),
  INFIX_ERROR(EPWROFF),
  INFIX_ERROR(ERPCMISMATCH),
  INFIX_ERROR(ESHLIBVERS),
#endif
});
#undef INFIX_ERROR

static map<string, Value> globals({
  {"__doc__",                Value(ValueType::Unicode, __doc__)},
  {"__package__",            Value(ValueType::Unicode, L"")},

  {"errorcode",              Value(ValueType::Dict, errno_names)},

#define INFIX_ERROR(e) {#e, Value(ValueType::Int, static_cast<int64_t>(e))}
  // common errors
  INFIX_ERROR(E2BIG),
  INFIX_ERROR(EACCES),
  INFIX_ERROR(EADDRINUSE),
  INFIX_ERROR(EADDRNOTAVAIL),
  INFIX_ERROR(EAFNOSUPPORT),
  INFIX_ERROR(EAGAIN),
  INFIX_ERROR(EALREADY),
  INFIX_ERROR(EBADF),
  INFIX_ERROR(EBADMSG),
  INFIX_ERROR(EBUSY),
  INFIX_ERROR(ECANCELED),
  INFIX_ERROR(ECHILD),
  INFIX_ERROR(ECONNABORTED),
  INFIX_ERROR(ECONNREFUSED),
  INFIX_ERROR(ECONNRESET),
  INFIX_ERROR(EDEADLK),
  INFIX_ERROR(EDESTADDRREQ),
  INFIX_ERROR(EDOM),
  INFIX_ERROR(EDQUOT),
  INFIX_ERROR(EEXIST),
  INFIX_ERROR(EFAULT),
  INFIX_ERROR(EFBIG),
  INFIX_ERROR(EHOSTDOWN),
  INFIX_ERROR(EHOSTUNREACH),
  INFIX_ERROR(EIDRM),
  INFIX_ERROR(EILSEQ),
  INFIX_ERROR(EINPROGRESS),
  INFIX_ERROR(EINTR),
  INFIX_ERROR(EINVAL),
  INFIX_ERROR(EIO),
  INFIX_ERROR(EISCONN),
  INFIX_ERROR(EISDIR),
  INFIX_ERROR(ELOOP),
  INFIX_ERROR(EMFILE),
  INFIX_ERROR(EMLINK),
  INFIX_ERROR(EMSGSIZE),
  INFIX_ERROR(EMULTIHOP),
  INFIX_ERROR(ENAMETOOLONG),
  INFIX_ERROR(ENETDOWN),
  INFIX_ERROR(ENETRESET),
  INFIX_ERROR(ENETUNREACH),
  INFIX_ERROR(ENFILE),
  INFIX_ERROR(ENOBUFS),
  INFIX_ERROR(ENODATA),
  INFIX_ERROR(ENODEV),
  INFIX_ERROR(ENOENT),
  INFIX_ERROR(ENOEXEC),
  INFIX_ERROR(ENOLCK),
  INFIX_ERROR(ENOLINK),
  INFIX_ERROR(ENOMEM),
  INFIX_ERROR(ENOMSG),
  INFIX_ERROR(ENOPROTOOPT),
  INFIX_ERROR(ENOSPC),
  INFIX_ERROR(ENOSR),
  INFIX_ERROR(ENOSTR),
  INFIX_ERROR(ENOSYS),
  INFIX_ERROR(ENOTBLK),
  INFIX_ERROR(ENOTCONN),
  INFIX_ERROR(ENOTDIR),
  INFIX_ERROR(ENOTEMPTY),
  INFIX_ERROR(ENOTRECOVERABLE),
  INFIX_ERROR(ENOTSOCK),
  INFIX_ERROR(ENOTSUP),
  INFIX_ERROR(ENOTTY),
  INFIX_ERROR(ENXIO),
  INFIX_ERROR(EOPNOTSUPP),
  INFIX_ERROR(EOVERFLOW),
  INFIX_ERROR(EOWNERDEAD),
  INFIX_ERROR(EPERM),
  INFIX_ERROR(EPFNOSUPPORT),
  INFIX_ERROR(EPIPE),
  INFIX_ERROR(EPROTO),
  INFIX_ERROR(EPROTONOSUPPORT),
  INFIX_ERROR(EPROTOTYPE),
  INFIX_ERROR(ERANGE),
  INFIX_ERROR(EREMOTE),
  INFIX_ERROR(EROFS),
  INFIX_ERROR(ESHUTDOWN),
  INFIX_ERROR(ESOCKTNOSUPPORT),
  INFIX_ERROR(ESPIPE),
  INFIX_ERROR(ESRCH),
  INFIX_ERROR(ESTALE),
  INFIX_ERROR(ETIME),
  INFIX_ERROR(ETIMEDOUT),
  INFIX_ERROR(ETOOMANYREFS),
  INFIX_ERROR(ETXTBSY),
  INFIX_ERROR(EUSERS),
  INFIX_ERROR(EWOULDBLOCK),
  INFIX_ERROR(EXDEV),

#ifdef LINUX
  INFIX_ERROR(EADV),
  INFIX_ERROR(EBADE),
  INFIX_ERROR(EBADFD),
  INFIX_ERROR(EBADR),
  INFIX_ERROR(EBADRQC),
  INFIX_ERROR(EBADSLT),
  INFIX_ERROR(EBFONT),
  INFIX_ERROR(ECHRNG),
  INFIX_ERROR(ECOMM),
  INFIX_ERROR(EDEADLOCK),
  INFIX_ERROR(EDOTDOT),
  INFIX_ERROR(EISNAM),
  INFIX_ERROR(EKEYEXPIRED),
  INFIX_ERROR(EKEYREJECTED),
  INFIX_ERROR(EKEYREVOKED),
  INFIX_ERROR(EL2HLT),
  INFIX_ERROR(EL2NSYNC),
  INFIX_ERROR(EL3HLT),
  INFIX_ERROR(EL3RST),
  INFIX_ERROR(ELIBACC),
  INFIX_ERROR(ELIBBAD),
  INFIX_ERROR(ELIBEXEC),
  INFIX_ERROR(ELIBMAX),
  INFIX_ERROR(ELIBSCN),
  INFIX_ERROR(ELNRNG),
  INFIX_ERROR(EMEDIUMTYPE),
  INFIX_ERROR(ENAVAIL),
  INFIX_ERROR(ENOANO),
  INFIX_ERROR(ENOCSI),
  INFIX_ERROR(ENOKEY),
  INFIX_ERROR(ENOMEDIUM),
  INFIX_ERROR(ENONET),
  INFIX_ERROR(ENOPKG),
  INFIX_ERROR(ENOTNAM),
  INFIX_ERROR(ENOTUNIQ),
  INFIX_ERROR(EREMCHG),
  INFIX_ERROR(EREMOTEIO),
  INFIX_ERROR(ERESTART),
  INFIX_ERROR(ERFKILL),
  INFIX_ERROR(ESRMNT),
  INFIX_ERROR(ESTRPIPE),
  INFIX_ERROR(EUCLEAN),
  INFIX_ERROR(EUNATCH),
  INFIX_ERROR(EXFULL),
#endif

#ifdef MACOSX
  INFIX_ERROR(EAUTH),
  INFIX_ERROR(EBADARCH),
  INFIX_ERROR(EBADEXEC),
  INFIX_ERROR(EBADMACHO),
  INFIX_ERROR(EBADRPC),
  INFIX_ERROR(EDEVERR),
  INFIX_ERROR(EFTYPE),
  INFIX_ERROR(ENEEDAUTH),
  INFIX_ERROR(ENOATTR),
  INFIX_ERROR(ENOPOLICY),
  INFIX_ERROR(EPROCLIM),
  INFIX_ERROR(EPROCUNAVAIL),
  INFIX_ERROR(EPROGMISMATCH),
  INFIX_ERROR(EPROGUNAVAIL),
  INFIX_ERROR(EPWROFF),
  INFIX_ERROR(ERPCMISMATCH),
  INFIX_ERROR(ESHLIBVERS),
#endif
});

#undef INFIX_ERROR

std::shared_ptr<ModuleContext> errno_module(new ModuleContext("posix", globals));

void errno_initialize() {
  // nothing to do
}
